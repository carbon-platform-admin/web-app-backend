"""
Django settings for eco_marketplace project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import environ


# Initialise environment variables
env = environ.Env()
environ.Env.read_env()

# env = environ.Env(
#     # set casting, default value
#     DEBUG=(bool, False)
# )

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

STRIPE_PK_TEST = env('STRIPE_PK_TEST')
STRIPE_SK_TEST = env('STRIPE_SK_TEST')
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [ 
    'localhost',
    'web-production-93d3.up.railway.app/',
    '127.0.0.1'
]


# CORS


CORS_ORIGIN_WHITELIST = [
    'http://localhost:8080',
    'https://gorgeous-sawine-faaa7b.netlify.app',
    'https://carbon-platform-v1.herokuapp.com',
    'https://web-production-8fd9.up.railway.app',
    'https://poetic-gelato-0841e6.netlify.app'
]

ALGOLIA_APP_ID =  env('ALGOLIA_APP_ID')

ALGOLIA_API_KEY = env('ALGOLIA_API_KEY')

ALGOLIA = {
    "ALGOLIA_API_KEY": ALGOLIA_API_KEY,
    "ALGOLIA_APP_ID": ALGOLIA_APP_ID
}



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # third-party
    'rest_framework',
    'storages',
    'corsheaders',
    'algoliasearch_django',

    # internal,
    'products',
    'users',
    'vendors',
    'reviews',
    'categories',
    'tags',
    'blogs'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'eco_marketplace.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'eco_marketplace.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT')
    }
}

# postgresql://postgres:M3mWih1GzdwAeHfaYdK6@containers-us-west-133.railway.app:7325/railway




# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'


""
#S3 BUCKETS CONFIG

# AWS_ACCESS_KEY_ID = env("AWS_ACCESS_KEY_ID")
# AWS_SECRET_ACCESS_KEY = env("AWS_SECRET_ACCESS_KEY")
# AWS_STORAGE_BUCKET_NAME = env("AWS_STORAGE_BUCKET_NAME")

AWS_QUERYSTRING_AUTH = False


# AWS_S3_FILE_OVERWRITE = env("AWS_S3_FILE_OVERWRITE")
# AWS_DEFAULT_ACL = env("AWS_DEFAULT_ACL")
# DEFAULT_FILE_STORAGE = env("DEFAULT_FILE_STORAGE")

# STATICFILES_STORAGE = env("STATICFILES_STORAGE")

# STATIC_URL = '/static/'
# STATIC_ROOT = BASE_DIR / 'static'

if DEBUG:
    CLIENT_URL = "http://localhost:8080"
else:
    CLIENT_URL = "https://poetic-gelato-0841e6.netlify.app/"